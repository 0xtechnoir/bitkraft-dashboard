generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type EtheruemLiqudationPositionsExtra {
  url String
}

type HistoricalTokenWatchlistPriceDataData {
  date              String
  eth_value         Float
  /// Multiple data types found: Float: 99.9%, Int: 0.1% out of 6184 sampled entries
  indexed_eth_value Json
  /// Multiple data types found: Float: 99.9%, Int: 0.1% out of 6184 sampled entries
  indexed_usd_value Json
  timestamp         Float
  usd_value         Float
}

type PolygonLiqudationPositionsExtra {
  url String
}

model alethea_artificial_liquid_intelligence_token {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  eth_value Float
  time      Float  @unique(map: "time_1")
  usd_value Float

  @@map("alethea-artificial-liquid-intelligence-token")
}

model bitcoin {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  eth_value Float
  time      Float  @unique(map: "time_1")
  usd_value Float
}

model blackpool_token {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  eth_value Float
  time      Float  @unique(map: "time_1")
  usd_value Float

  @@map("blackpool-token")
}

model defipulse_index {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  eth_value Float
  time      Float  @unique(map: "time_1")
  usd_value Float

  @@map("defipulse-index")
}

model ethereum {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  eth_value Int
  time      Float  @unique(map: "time_1")
  usd_value Float
}

model etheruem_liqudation_positions {
  id               String                           @id @default(auto()) @map("_id") @db.ObjectId
  collateral       String
  collateralAmount String
  extra            EtheruemLiqudationPositionsExtra
  liqPrice         Float
  owner            String
}

model historical_token_watchlist_price_data {
  id    String                                  @id @default(auto()) @map("_id") @db.ObjectId
  data  HistoricalTokenWatchlistPriceDataData[]
  token String                                  @unique(map: "token_1")
}

model immutable_x {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  eth_value Float
  time      Float  @unique(map: "time_1")
  usd_value Float

  @@map("immutable-x")
}

model matic_network {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  eth_value Float
  time      Float  @unique(map: "time_1")
  usd_value Float

  @@map("matic-network")
}

model polygon_liqudation_positions {
  id               String                          @id @default(auto()) @map("_id") @db.ObjectId
  collateral       String
  collateralAmount String
  extra            PolygonLiqudationPositionsExtra
  liqPrice         Float
  owner            String
}

model rainbow_token_2 {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  eth_value Float
  time      Float  @unique(map: "time_1")
  usd_value Float

  @@map("rainbow-token-2")
}

model sipher {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  eth_value Float
  time      Float  @unique(map: "time_1")
  usd_value Float
}

model superfarm {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  eth_value Float
  time      Float  @unique(map: "time_1")
  usd_value Float
}

model token_watchlist {
  id                   String @id @default(auto()) @map("_id") @db.ObjectId
  circulating_supply   String
  coin_id              Int    @unique(map: "coin_id_1")
  fdv                  String
  market_cap           String
  max_supply           String
  pc_circulating       String
  price                String
  price_change_pc_24hr String
  price_change_pc_30d  String
  price_change_pc_3m   String
  price_change_pc_6m   String
  price_change_pc_7d   String
  rank                 Int
  token                String
  total_supply         String
  volume_24h           String
}

model top_20_projects_by_market_cap {
  id                   String @id @default(auto()) @map("_id") @db.ObjectId
  circulating_supply   String
  coin_id              Int
  fdv                  String
  market_cap           String
  max_supply           String
  pc_circulating       String
  price                Float
  price_change_pc_24hr String
  price_change_pc_30d  String
  price_change_pc_3m   String
  price_change_pc_6m   String
  price_change_pc_7d   String
  rank                 Int    @unique(map: "rank_1")
  token                String
  total_supply         String
  volume_24h           String
}

model treasury_yield_curves {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  /// Multiple data types found: Float: 99.1%, Int: 0.9% out of 1000 sampled entries
  bc_10year        Json
  /// Multiple data types found: Float: 98.6%, Int: 1.4% out of 630 sampled entries
  bc_1month        Json?
  /// Multiple data types found: Float: 99.2%, Int: 0.8% out of 1000 sampled entries
  bc_1year         Json
  /// Multiple data types found: Float: 98.6%, Int: 1.4% out of 879 sampled entries
  bc_20year        Json?
  bc_2month        Float?
  /// Multiple data types found: Float: 99%, Int: 1% out of 1000 sampled entries
  bc_2year         Json
  /// Multiple data types found: Float: 99.1%, Int: 0.9% out of 877 sampled entries
  bc_30year        Json?
  /// Multiple data types found: Float: 35.9%, Int: 64.1% out of 1000 sampled entries
  bc_30yeardisplay Json
  /// Multiple data types found: Float: 99.4%, Int: 0.6% out of 1000 sampled entries
  bc_3month        Json
  /// Multiple data types found: Float: 99.2%, Int: 0.8% out of 1000 sampled entries
  bc_3year         Json
  bc_4month        Float?
  /// Multiple data types found: Float: 99%, Int: 1% out of 1000 sampled entries
  bc_5year         Json
  /// Multiple data types found: Float: 99.1%, Int: 0.9% out of 1000 sampled entries
  bc_6month        Json
  /// Multiple data types found: Float: 98.6%, Int: 1.4% out of 1000 sampled entries
  bc_7year         Json
  date             String @unique(map: "date_1")
  id_              Int?   @map("id")
  timestamp        Float
}

model usd_liquidity_conditions_index {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  date            String @unique(map: "date_1")
  liquidity_index Int
  /// Multiple data types found: Float: 46.3%, Int: 53.7% out of 1000 sampled entries
  rrpontsyd       Json
  walcl           Int
  wdtgal          Int
}

model yield_guild_games {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  eth_value Float
  time      Float  @unique(map: "time_1")
  usd_value Float

  @@map("yield-guild-games")
}
